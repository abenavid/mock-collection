stages:
  - sync
  - build

sync_from_github:
  stage: sync
  script:
    - apt-get update && apt-get install -y git
    - git config --global user.email "abenavid@redhat.com"
    - git config --global user.name "Alex Benavides"
    - git remote add github https://$GITHUB_PAT@github.com/abenavid/mock-collection.git || git remote set-url github https://$GITHUB_PAT@github.com/abenavid/mock-collection.git
    - git remote add gitlab https://username:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/test.git || git remote set-url gitlab https://username:$GITLAB_PAT@gitlab.consulting.redhat.com/internal-ansible-library/test.git
    - git fetch github
    - git checkout -B main github/main
    - git fetch gitlab
    - git merge --allow-unrelated-histories gitlab/main || echo "No conflicts detected."
    - git push gitlab main
  tags:
    - internal
    - pah

build_collections:
  stage: build
  script:
    - apt-get update && apt-get install -y python3 python3-pip
    - pip3 install ansible-core
    - |
      # Find all namespaces and collections dynamically
      for namespace_dir in $(find . -type d -name "ansible_collections"); do
        cd $namespace_dir
        for collection_dir in $(find . -mindepth 1 -maxdepth 1 -type d); do
          echo "Building collection: $collection_dir"
          cd $collection_dir
          ansible-galaxy collection build
          mv *.tar.gz /builds/output/  # Move built files to a central output directory
          cd ..
        done
        cd ../../..
      done
  artifacts:
    paths:
      - output/*.tar.gz
  tags:
    - internal
    - pah
